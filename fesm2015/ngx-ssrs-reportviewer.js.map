{"version":3,"file":"ngx-ssrs-reportviewer.js.map","sources":["ng://ngx-ssrs-reportviewer/lib/reportviewer.component.ts","ng://ngx-ssrs-reportviewer/lib/reportviewer.module.ts"],"sourcesContent":["import { Component, OnChanges, Input, Output, EventEmitter, SimpleChanges, ViewEncapsulation  } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'ssrs-reportviewer',\n  template: `\n  <div class=\"iframe-container\">\n    <iframe [src]=\"source\" scrolling=\"no\"></iframe>\n  </div>\n  `,\n  styles: [`\n  \n  .iframe-container iframe {\n     border: 0;\n     height: 100%;\n     left: 0;\n     position: absolute;\n     top: 0;\n     width: 100%;\n  }\n  \n  /* 4x3 Aspect Ratio */\n  .iframe-container-4x3 {\n    padding-top: 75%;\n  }\n  `],\n  encapsulation: ViewEncapsulation.ShadowDom\n})\nexport class ReportViewerComponent implements OnChanges {\n\n  @Input()\n  reporturl: string;\n  @Input()\n  reportserver: string;\n  @Input()\n  showparameters?: string = \"false\";\n  @Input()\n  parameters?: any;\n  @Input()\n  language?: string = \"en-us\";\n  @Input()\n  width?: number = 100;\n  @Input()\n  height?: number = 100;\n  @Input()\n  toolbar?: string = \"true\";\n\n  @Output('error') onError = new EventEmitter<any>();\n  constructor(private sanitizer: DomSanitizer) { }\n\n\n  source: SafeResourceUrl;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(!this.reporturl){\n      this.onError.emit(\"Src cannot be null\");\n    }\n\n    if ('reporturl' in changes) {\n      this.source = this.sanitizer\n      .bypassSecurityTrustResourceUrl(this.buildReportUrl());\n    }\n  }\n\n  public buildParameterString(): string {\n\n    var parameterString = \"\";\n\n    for (var param in this.parameters) {\n      if (param) {\n        if (this.parameters[param] instanceof Array === true) {\n          for (var arrayParam in this.parameters[param]) {\n            if (arrayParam) {\n              parameterString += \"&\" + param + \"=\" + this.parameters[param][arrayParam];\n            }\n          }\n        }\n        if (this.parameters[param] != null && this.parameters[param] instanceof Array === false) {\n          parameterString += \"&\" + param + \"=\" + this.parameters[param];\n        }\n        if (this.parameters[param] == null) {\n          parameterString += \"&\" + param + \":isnull=true\";\n        }\n      }\n    }\n    return parameterString;\n  }\n\n  public buildReportUrl() : string {\n    if (!this.reporturl) {\n      return;\n    }\n    var parameters = this.buildParameterString();\n    return this.reportserver + '?/'\n      + this.reporturl + '&rs:Embed=true'\n      + '&rc:Parameters=' + this.showparameters\n      + parameters\n      + '&rs:ParameterLanguage=' + this.language + \"&rc:Toolbar=\" + this.toolbar; \n  }\n}\n","import { NgModule, Injector } from '@angular/core';\nimport { ReportViewerComponent } from './reportviewer.component';\nimport { createCustomElement } from '@angular/elements';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ReportViewerComponent],\n  imports: [CommonModule],\n  entryComponents: [ReportViewerComponent]\n})\nexport class ReportViewerModule {\n  constructor(private injector: Injector) {\n    const reportviewerElement = createCustomElement(ReportViewerComponent, { injector });\n    customElements.define('ssrs-reportviewer', reportviewerElement);\n  }\n }\n"],"names":[],"mappings":"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"}
