{"version":3,"file":"ngx-ssrs-reportviewer.umd.js.map","sources":["ng://ngx-ssrs-reportviewer/lib/reportviewer.component.ts","ng://ngx-ssrs-reportviewer/lib/reportviewer.module.ts"],"sourcesContent":["import { Component, OnChanges, Input, Output, EventEmitter, SimpleChanges, ViewEncapsulation  } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'ssrs-reportviewer',\n  template: `\n  <div class=\"iframe-container\">\n    <iframe [src]=\"source\" scrolling=\"no\"></iframe>\n  </div>\n  `,\n  styles: [`\n  \n  .iframe-container iframe {\n     border: 0;\n     height: 100%;\n     left: 0;\n     position: absolute;\n     top: 0;\n     width: 100%;\n  }\n  \n  /* 4x3 Aspect Ratio */\n  .iframe-container-4x3 {\n    padding-top: 75%;\n  }\n  `],\n  encapsulation: ViewEncapsulation.ShadowDom\n})\nexport class ReportViewerComponent implements OnChanges {\n\n  @Input()\n  reporturl: string;\n  @Input()\n  reportserver: string;\n  @Input()\n  showparameters?: string = \"false\";\n  @Input()\n  parameters?: any;\n  @Input()\n  language?: string = \"en-us\";\n  @Input()\n  width?: number = 100;\n  @Input()\n  height?: number = 100;\n  @Input()\n  toolbar?: string = \"true\";\n\n  @Output('error') onError = new EventEmitter<any>();\n  constructor(private sanitizer: DomSanitizer) { }\n\n\n  source: SafeResourceUrl;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(!this.reporturl){\n      this.onError.emit(\"Src cannot be null\");\n    }\n\n    if ('reporturl' in changes) {\n      this.source = this.sanitizer\n      .bypassSecurityTrustResourceUrl(this.buildReportUrl());\n    }\n  }\n\n  public buildParameterString(): string {\n\n    var parameterString = \"\";\n\n    for (var param in this.parameters) {\n      if (param) {\n        if (this.parameters[param] instanceof Array === true) {\n          for (var arrayParam in this.parameters[param]) {\n            if (arrayParam) {\n              parameterString += \"&\" + param + \"=\" + this.parameters[param][arrayParam];\n            }\n          }\n        }\n        if (this.parameters[param] != null && this.parameters[param] instanceof Array === false) {\n          parameterString += \"&\" + param + \"=\" + this.parameters[param];\n        }\n        if (this.parameters[param] == null) {\n          parameterString += \"&\" + param + \":isnull=true\";\n        }\n      }\n    }\n    return parameterString;\n  }\n\n  public buildReportUrl() : string {\n    if (!this.reporturl) {\n      return;\n    }\n    var parameters = this.buildParameterString();\n    return this.reportserver + '?/'\n      + this.reporturl + '&rs:Embed=true'\n      + '&rc:Parameters=' + this.showparameters\n      + parameters\n      + '&rs:ParameterLanguage=' + this.language + \"&rc:Toolbar=\" + this.toolbar; \n  }\n}\n","import { NgModule, Injector } from '@angular/core';\nimport { ReportViewerComponent } from './reportviewer.component';\nimport { createCustomElement } from '@angular/elements';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ReportViewerComponent],\n  imports: [CommonModule],\n  entryComponents: [ReportViewerComponent]\n})\nexport class ReportViewerModule {\n  constructor(private injector: Injector) {\n    const reportviewerElement = createCustomElement(ReportViewerComponent, { injector });\n    customElements.define('ssrs-reportviewer', reportviewerElement);\n  }\n }\n"],"names":["EventEmitter","Component","ViewEncapsulation","DomSanitizer","Input","Output","createCustomElement","NgModule","CommonModule","Injector"],"mappings":"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"}
